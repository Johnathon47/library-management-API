openapi: 3.0.0
info:
  title: Library Management API
  description: API for managing books and authors in a library
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Wesley-be7/library-management/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080
  description: Local server
paths:
  /books:
    get:
      summary: Get all books
      parameters:
      - name: bookName
        in: query
        description: Filter by book name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: releaseDate
        in: query
        description: Filter by release date range
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Update a book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: Book updated
    post:
      summary: Add a new book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "201":
          description: Book created
    delete:
      summary: Delete a book
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Book deleted
  /authors:
    get:
      summary: Get all authors
      parameters:
      - name: authorName
        in: query
        description: Filter by author name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      summary: Update an author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "200":
          description: Author updated
    post:
      summary: Add a new author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "201":
          description: Author created
    delete:
      summary: Delete an author
      parameters:
      - name: id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Author deleted
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
          - ROMANCE
          - COMEDY
          - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
          - M
          - F
